from typing import Any, Dict, Tuple
from numpy import ndarray

class Linear:
    "doc"
    weight: ndarray
    bias: ndarray
    is_bias: bool
    trainable: bool
    shape: Tuple[int, int]

    def __init__(self, in_features: int, out_features: int, is_bias: bool = True, trainable: bool = True) -> None: ...
    def forward(self, x: ndarray) -> ndarray: ...
    def backward(self, x: ndarray, dy: ndarray) -> ndarray: ...
    def update(self, x: ndarray, dy: ndarray, lr: float) -> ndarray: ...
    def parameters(self) -> Dict[str, Any]: ...
    def __call__(self, value: ndarray) -> ndarray: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
    def __call__(self, x: ndarray) -> ndarray: ...
    def __getattribute__(self, name: str) -> Any: ...

class Neural:
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def forward(self, x: ndarray) -> ndarray: ...
    def parameters(self) -> Dict[str, Any]: ...
    def __call__(self, *args: Any, **kwds: Any) -> Any: ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...
